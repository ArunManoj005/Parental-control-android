name: Android CI

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  build:
    name: Build APK
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up JDK
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: gradle-${{ runner.os }}

      - name: Grant execute permission for Gradle
        run: chmod +x ./gradlew

      - name: Decode google-services.json
        run: |
          echo "${{ secrets.GOOGLE_SERVICES_JSON }}" | base64 -d > app/google-services.json

      - name: Auto-increment version
        run: |
          VERSION_CODE=${{ github.run_number }}
          VERSION_NAME="1.0.${{ github.run_number }}"
          sed -i "s/versionCode = .*/versionCode = ${VERSION_CODE}/" app/build.gradle.kts
          sed -i 's/versionName = ".*"/versionName = "'"${VERSION_NAME}"'"/' app/build.gradle.kts


      - name: Build Debug APK
        run: ./gradlew assembleDebug

      - name: Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: debug-apk
          path: app/build/outputs/apk/debug/app-debug.apk

      - name: Upload to Firebase App Distribution
        run: |
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_JSON }}" | base64 -d > firebase-key.json
          npm install -g firebase-tools
          firebase appdistribution:distribute app/build/outputs/apk/debug/app-debug.apk \
            --app 1:811773821154:android:5d2b714329c649d12b5ebb \
            --token "${{ secrets.FIREBASE_TOKEN }}" \
            --testers "arunmanoj.in@gmail.com"

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: v1.0.${{ github.run_number }}
          name: Release v1.0.${{ github.run_number }}
          body: Auto-generated release from CI
          files: app/build/outputs/apk/debug/app-debug.apk

      - name: Notify via Telegram
        if: success()
        run: |
          curl -s -X POST https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage \
            -d chat_id=${{ secrets.TELEGRAM_CHAT_ID }} \
            -d text="âœ… *Build Complete!*\nProject: *Parental Control App*\nAPK: debug-apk\nVersion: v1.0.${{ github.run_number }}" \
            -d parse_mode=Markdown
